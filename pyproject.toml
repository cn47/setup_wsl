[project]
name = "xxx"
version = "0.1.0"
description = "this is xxx project"
authors = [{ name = "cn47"}]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "numpy>=2.2.5",
    "pandas>=2.2.3",
    "polars>=1.29.0",
    "pyyaml>=6.0.2",
    "pendulum>=3.1.0",
    "tqdm>=4.67.1",
]

# [build-system]
# requires = ["uv"]
# build-backend = "uv.backend"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "ruff>=0.11.8",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.12",
    "mkdocstrings>=0.29.1",
]

[tool.ruff]
fix = false
unfixable = [
  "ERA", # do not autoremove commented out code
]
line-length = 120
target-version = "py311"
ignore-init-module-imports = true
extend-select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "ERA", # flake8-eradicate/eradicate
  "I",   # isort
  "PIE", # flake8-pie
  "PGH", # pygrep
  "RUF", # ruff checks
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports= "all"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
force-single-line = false
lines-between-types = 1
lines-after-imports = 2
# known-first-party = [""]
# known-third-party = [""]
# required-imports = ["from __future__ import annotations"]

[tool.black]
color = true
line-length = 120
target-version = ["py311"]

